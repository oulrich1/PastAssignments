# GNU Make project makefile autogenerated by Premake
ifndef config
  config=release
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),release)
  OBJDIR     = obj/Release
  TARGETDIR  = ../../bin
  TARGET     = $(TARGETDIR)/maze
  DEFINES   += 
  INCLUDES  += -I../../include/game -I../../include/angel -I../../include/geometry -I../../include/room -I../../include/utils -I../../include/maze -I../../include/camera -I../../include/geometry/character -I../../include/geometry/world_object -I../../include/geometry/character/npc -I../../include/geometry/character/player -I../../include/geometry/world_object/sphere -I../../include/geometry/world_object/wall -I../../include/geometry/world_object/windmill -I../../include/geometry/world_object/terrain -I../../include/geometry/world_object/floor
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -std=c++11 -Wall -pedantic -Wno-unused-function -Wno-unused-but-set-variable -Wno-sign-compare
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -L../lib
  LIBS      += -lcommon-lib -lpthread -lglut -lGLEW -lGL -lGLU -lm
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../lib/libcommon-lib.a
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug)
  OBJDIR     = obj/Debug
  TARGETDIR  = ../../bin
  TARGET     = $(TARGETDIR)/maze
  DEFINES   += -DDEBUG_ON
  INCLUDES  += -I../../include/game -I../../include/angel -I../../include/geometry -I../../include/room -I../../include/utils -I../../include/maze -I../../include/camera -I../../include/geometry/character -I../../include/geometry/world_object -I../../include/geometry/character/npc -I../../include/geometry/character/player -I../../include/geometry/world_object/sphere -I../../include/geometry/world_object/wall -I../../include/geometry/world_object/windmill -I../../include/geometry/world_object/terrain -I../../include/geometry/world_object/floor
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -std=c++11 -Wall -pedantic -Wno-unused-function -Wno-unused-but-set-variable -Wno-sign-compare
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -L../lib
  LIBS      += -lcommon-lib -lpthread -lglut -lGLEW -lGL -lGLU -lm
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../lib/libcommon-lib.a
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/main.o \
	$(OBJDIR)/game.o \
	$(OBJDIR)/geometry.o \
	$(OBJDIR)/character.o \
	$(OBJDIR)/npc.o \
	$(OBJDIR)/player.o \
	$(OBJDIR)/world_object.o \
	$(OBJDIR)/sphere.o \
	$(OBJDIR)/wall.o \
	$(OBJDIR)/windmill.o \
	$(OBJDIR)/terrain.o \
	$(OBJDIR)/floor.o \
	$(OBJDIR)/room.o \
	$(OBJDIR)/maze.o \
	$(OBJDIR)/camera.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking Maze
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Maze
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	-$(SILENT) cp $< $(OBJDIR)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
endif

$(OBJDIR)/main.o: ../../main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/game.o: ../../src/game/game.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/geometry.o: ../../src/geometry/geometry.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/character.o: ../../src/geometry/character/character.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/npc.o: ../../src/geometry/character/npc/npc.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/player.o: ../../src/geometry/character/player/player.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/world_object.o: ../../src/geometry/world_object/world_object.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/sphere.o: ../../src/geometry/world_object/sphere/sphere.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/wall.o: ../../src/geometry/world_object/wall/wall.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/windmill.o: ../../src/geometry/world_object/windmill/windmill.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/terrain.o: ../../src/geometry/world_object/terrain/terrain.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/floor.o: ../../src/geometry/world_object/floor/floor.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/room.o: ../../src/room/room.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/maze.o: ../../src/maze/maze.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/camera.o: ../../src/camera/camera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
